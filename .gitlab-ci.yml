# GitLab CI in conjunction with GitLab Runner can use Docker Engine to test and build any application.
# Docker, when used with GitLab CI, runs each job in a separate and isolated container using the predefined image that is set up in .gitlab-ci.yml.
# In this case we use the latest python docker image to build and test this project.
image: $SKA_K8S_TOOLS_DOCKER_BUILDER_IMAGE

variables:
  GIT_SUBMODULE_STRATEGY: recursive

# cache is used to specify a list of files and directories which should be cached between jobs. You can only use paths that are within the project workspace.
# If cache is defined outside the scope of jobs, it means it is set globally and all jobs will use that definition
cache:
  paths:
    - build

# The YAML file defines a set of jobs with constraints stating when they should be run.
# You can specify an unlimited number of jobs which are defined as top-level elements with an arbitrary name and always have to contain at least the script clause.
# In this case we have only the test job which produce an artifacts (it must be placed into a directory called "public")
# It is also specified that only the master branch will be subject of this job.

stages:
  - test

k8s-test-tmc-with-csp:
  image: $SKA_K8S_TOOLS_BUILD_DEPLOY
  stage: test
  tags:
    - ska-k8s
  variables:
    TELESCOPE: 'SKA-mid'
    KUBE_NAMESPACE: 'ci-$CI_PROJECT_NAME-$CI_COMMIT_SHORT_SHA-csp-mid'
    MARK: 'tmc_csp'
    CSP_SIMULATION_ENABLED: 'false'
  script:
    - make k8s-test || true
  environment:
    name: test/$CI_COMMIT_REF_SLUG
    on_stop: stop-k8s-test-mid-with-csp
    auto_stop_in: 1 minute
  rules:
    - exists:
        - Mid/tests/**/*


stop-k8s-test-mid-with-csp:
  image: $SKA_K8S_TOOLS_BUILD_DEPLOY
  stage: test
  when: manual
  tags:
    - ska-k8s
  variables:
    KUBE_NAMESPACE: 'ci-$CI_PROJECT_NAME-$CI_COMMIT_SHORT_SHA-csp-mid'
  script:
    - kubectl delete pod test-runner-test -n $KUBE_NAMESPACE
  environment:
    name: test/$CI_COMMIT_REF_SLUG
    on_stop: stop-k8s-test-mid-with-csp
    auto_stop_in: 1 minute
    action: stop

k8s-test-tmc-with-sdp:
  image: $SKA_K8S_TOOLS_BUILD_DEPLOY
  stage: test
  tags:
    - ska-k8s
  variables:
    TELESCOPE: 'SKA-mid'
    PORT: "10000"
    KUBE_NAMESPACE: 'ci-$CI_PROJECT_NAME-$CI_COMMIT_SHORT_SHA-tmc-sdp'
    KUBE_NAMESPACE_SDP: 'ci-$CI_PROJECT_NAME-$CI_COMMIT_SHORT_SHA-sdp'
    SUBARRAY_COUNT: 2
    SDP_SIMULATION_ENABLED: 'false'
    TARANTA_ENABLED: 'true'
    MARK: tmc_sdp
  script:
    - - make k8s-test || true
  environment:
    name: test/$CI_COMMIT_REF_SLUG
    on_stop: stop-k8s-test-tmc-with-sdp
    auto_stop_in: 1 minute
  rules:
    - exists:
        - Mid/tests/**/*


stop-k8s-test-tmc-with-sdp:
  image: $SKA_K8S_TOOLS_BUILD_DEPLOY
  stage: test
  when: manual
  tags:
    - ska-k8s
  variables:
    KUBE_NAMESPACE: 'ci-$CI_PROJECT_NAME-$CI_COMMIT_SHORT_SHA-tmc-sdp'
    SDP_SIMULATION_ENABLED: 'false'
    KUBE_NAMESPACE_SDP: 'ci-$CI_PROJECT_NAME-$CI_COMMIT_SHORT_SHA-sdp' 
  script:
    - kubectl delete pod test-runner-test -n $KUBE_NAMESPACE
  environment:
    name: test/$CI_COMMIT_REF_SLUG
    on_stop: stop-k8s-test-tmc-with-sdp
    auto_stop_in: 1 minute
    action: stop

k8s-test-dish-lmc:
  image: $SKA_K8S_TOOLS_BUILD_DEPLOY
  stage: test
  when: manual
  tags:
    - ska-k8s
  variables:
    DISH_SIMULATION_ENABLED: "false"
    SUBARRAY_COUNT: 2
    DISH_TANGO_HOST: "tango-databaseds"
    PORT: "10000"
    DISH_INDEX_1: "001"
    DISH_INDEX_36: "036"
    DISH_INDEX_63: "063"
    DISH_INDEX_100: "100"
    DISH_NAMESPACE_1: "ci-$CI_PROJECT_NAME-$CI_COMMIT_SHORT_SHA-dish-lmc-$DISH_INDEX_1"
    DISH_NAMESPACE_2: "ci-$CI_PROJECT_NAME-$CI_COMMIT_SHORT_SHA-dish-lmc-$DISH_INDEX_36"
    DISH_NAMESPACE_3: "ci-$CI_PROJECT_NAME-$CI_COMMIT_SHORT_SHA-dish-lmc-$DISH_INDEX_63"
    DISH_NAMESPACE_4: "ci-$CI_PROJECT_NAME-$CI_COMMIT_SHORT_SHA-dish-lmc-$DISH_INDEX_100"
    KUBE_NAMESPACE: "ci-$CI_PROJECT_NAME-$CI_COMMIT_SHORT_SHA-dish-lmc-test"
    DISH_LMC_SERVICE_ACCOUNT: "ci-svc-$CI_PROJECT_NAME-$CI_COMMIT_SHORT_SHA-dish-lmc-test"
  script:
    - make k8s-test MARK=tmc_dish
  needs:
    - dish-lmc-dish001
    - dish-lmc-dish036
    - dish-lmc-dish063
    - dish-lmc-dish100
    - k8s-test-csp-dish
  after_script:
    - ls -al
    - ls -al build
    - ls -al tests
    - pip3 install -U ska-ser-xray
    - XRAY_TEST_RESULT_FILE="build/cucumber.json" make xray-publish
    - make k8s-uninstall-chart
  environment:
    name: test/$CI_COMMIT_REF_SLUG
    on_stop: stop-k8s-test-dish-lmc

stop-k8s-test-dish-lmc:
  image: $SKA_K8S_TOOLS_BUILD_DEPLOY
  stage: test
  when: manual
  tags:
    - ska-k8s
  variables:
    KUBE_NAMESPACE: "ci-$CI_PROJECT_NAME-$CI_COMMIT_SHORT_SHA-dish-lmc-test"
  script:
    - kubectl delete pod test-runner-test -n $KUBE_NAMESPACE
  environment:
    name: test/$CI_COMMIT_REF_SLUG
    on_stop: stop-k8s-test-dish-lmc
    auto_stop_in: 1 minute
    action: stop